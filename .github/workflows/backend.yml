name: backend
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  repository_dispatch:
    types: [plagiarism_detection_ci_cd]

jobs:
  train_deploy_model:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install javalang scikit-learn numpy pandas joblib
        
    - name: Create directories
      run: |
        mkdir -p backend/model
        mkdir -p backend/data/IR-Plag-Dataset
        
    - name: Train model
      run: |
        cd backend
        python model/train.py
      env:
        DATASET_PATH: "data/IR-Plag-Dataset"
        
    - name: Display model metrics
      run: |
        echo "=== Métricas del Modelo ==="
        if [ -f "backend/model/metrics.json" ]; then
          echo "Contenido de metrics.json:"
          cat backend/model/metrics.json
        else
          echo "metrics.json no encontrado"
          echo "Contenido del directorio model:"
          ls -la backend/model/
        fi
        
    - name: Generate metrics report
      run: |
        cd backend
        echo "=== Reporte de Métricas ===" > model/metrics_report.txt
        echo "Timestamp: $(date)" >> model/metrics_report.txt
        echo "\nMétricas del modelo:" >> model/metrics_report.txt
        if [ -f "model/metrics.json" ]; then
          echo "$(cat model/metrics.json)" >> model/metrics_report.txt
        else
          echo "No se encontró el archivo de métricas" >> model/metrics_report.txt
        fi
        
        # Agregar información del último commit
        echo "\nInformación del commit:" >> model/metrics_report.txt
        echo "Commit: $GITHUB_SHA" >> model/metrics_report.txt
        echo "Branch: $GITHUB_REF" >> model/metrics_report.txt
        
    - name: Save artifacts
      uses: actions/upload-artifact@v3
      with:
        name: model-artifacts
        path: |
          backend/model/classifier.joblib
          backend/model/metrics.json
          backend/model/metrics_report.txt
        retention-days: 90
        
    - name: Verify artifacts
      run: |
        echo "=== Verificando artefactos ==="
        echo "Contenido del directorio backend/model:"
        ls -la backend/model/
        
        if [ -f "backend/model/classifier.joblib" ]; then
          echo "✓ classifier.joblib encontrado"
          echo "Tamaño: $(ls -lh backend/model/classifier.joblib | awk '{print $5}')"
        else
          echo "✗ classifier.joblib no encontrado"
        fi
        
        if [ -f "backend/model/metrics.json" ]; then
          echo "✓ metrics.json encontrado"
          echo "Tamaño: $(ls -lh backend/model/metrics.json | awk '{print $5}')"
        else
          echo "✗ metrics.json no encontrado"
        fi
        
        if [ -f "backend/model/metrics_report.txt" ]; then
          echo "✓ metrics_report.txt encontrado"
          echo "Tamaño: $(ls -lh backend/model/metrics_report.txt | awk '{print $5}')"
        else
          echo "✗ metrics_report.txt no encontrado"
        fi
          backend/model/*.json
        retention-days: 90
