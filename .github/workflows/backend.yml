name: backend
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  repository_dispatch:
    types: [plagiarism_detection_ci_cd]

jobs:
  train_deploy_model:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt
        pip install javalang scikit-learn numpy pandas joblib
        
    - name: Create directories
      run: |
        mkdir -p backend/model
        mkdir -p backend/data/IR-Plag-Dataset
        chmod 777 backend/model  # Dar permisos completos al directorio
        
    - name: Train model
      run: |
        cd backend
        python model/train.py
      env:
        DATASET_PATH: "data/IR-Plag-Dataset"
        
    - name: Fix permissions
      run: |
        sudo chown -R $USER:$USER backend/model/
        chmod -R 755 backend/model/
        
    - name: Display model metrics
      run: |
        echo "=== Métricas del Modelo ==="
        if [ -f "backend/model/metrics.json" ]; then
          sudo cat backend/model/metrics.json
        else
          echo "metrics.json no encontrado"
          echo "Contenido del directorio model:"
          ls -la backend/model/
        fi
        
    - name: Generate metrics report
      run: |
        cd backend
        sudo bash -c 'echo "=== Reporte de Métricas ===" > model/metrics_report.txt'
        sudo bash -c 'echo "Timestamp: $(date)" >> model/metrics_report.txt'
        if [ -f "model/metrics.json" ]; then
          sudo bash -c 'cat model/metrics.json >> model/metrics_report.txt'
        else
          sudo bash -c 'echo "No se encontró el archivo de métricas" >> model/metrics_report.txt'
        fi
        
    - name: Verify artifacts with permissions
      run: |
        echo "=== Verificando artefactos ==="
        sudo ls -la backend/model/
        
        for file in classifier.joblib metrics.json metrics_report.txt; do
          if [ -f "backend/model/$file" ]; then
            echo "✓ $file encontrado"
            echo "Tamaño: $(sudo ls -lh backend/model/$file | awk '{print $5}')"
            sudo chmod 644 "backend/model/$file"  # Dar permisos de lectura
          else
            echo "✗ $file no encontrado"
          fi
        done
        
    - name: Save artifacts
      uses: actions/upload-artifact@v3
      with:
        name: model-artifacts
        path: |
          backend/model/classifier.joblib
          backend/model/metrics.json
          backend/model/metrics_report.txt
        retention-days: 90
