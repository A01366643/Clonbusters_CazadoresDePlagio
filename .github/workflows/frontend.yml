name: frontend

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Debug directory structure
        run: |
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          ls -la
          echo "Frontend directory contents:"
          ls -la frontend/

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        working-directory: ./frontend
        run: |
          echo "Installing dependencies..."
          npm install --verbose  # Agregamos --verbose para ver más detalles
          echo "Creating package-lock.json if it doesn't exist..."
          npm i --package-lock-only
          echo "Package.json contents:"
          cat package.json

      - name: Debug project structure
        working-directory: ./frontend
        run: |
          echo "Current directory structure:"
          ls -la
          echo "Content of src directory:"
          ls -la src/
          echo "Checking for index.html:"
          ls -la index.html

      - name: Build
        working-directory: ./frontend
        run: |
          echo "Starting build..."
          # Asegurarse de que estamos en el directorio correcto
          pwd
          # Mostrar el contenido de package.json
          cat package.json
          # Intentar el build con más información de debug
          npm run build --verbose
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ secrets.DOCKER_USER }}/clonbusters-frontend:latest
            ${{ secrets.DOCKER_USER }}/clonbusters-frontend:${{ github.sha }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
