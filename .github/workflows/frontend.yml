name: frontend

on:
  push:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          # Removemos la configuración del caché que causaba el error
          # cache: 'npm'
          # cache-dependency-path: './frontend/package-lock.json'

      - name: Clean install dependencies
        run: |
          npm ci
        working-directory: ./frontend

      - name: Lint
        run: npm run lint
        working-directory: ./frontend
        
      - name: Build
        run: npm run build
        working-directory: ./frontend
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: |
            ${{ secrets.DOCKER_USER }}/clonbusters-frontend:latest
            ${{ secrets.DOCKER_USER }}/clonbusters-frontend:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKER_USER }}/clonbusters-frontend:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USER }}/clonbusters-frontend:buildcache,mode=max

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
